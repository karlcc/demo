name: "Tests"

on:
    pull_request:
    push:
        branches:
            - main
    workflow_dispatch:

env:
    fail-fast: false

permissions:
    contents: read

jobs:
    test:
        name: "${{ matrix.operating-system }} / PHP ${{ matrix.php-version }}"
        runs-on: ${{ matrix.operating-system }}
        continue-on-error: false

        strategy:
            matrix:
                operating-system: ['ubuntu-latest']
                php-version: ['8.2', '8.3', '8.4']
                include:
                    - operating-system: 'windows-latest'
                      php-version: '8.2'
                    - operating-system: 'macos-latest'
                      php-version: '8.3'
                      use-docker: true

        steps:
            - name: "Checkout code"
              uses: actions/checkout@v5

            - name: "Set up Docker for macOS"
              if: matrix.use-docker == 'true'
              uses: docker/setup-docker@v4
              with:
                docker-version: '26.1.0'

            - name: "Set up Docker Compose for macOS"
              if: matrix.use-docker == 'true'
              uses: docker/setup-compose@v3

            - name: "Install PHP with extensions"
              if: matrix.use-docker != 'true'
              uses: shivammathur/setup-php@v2
              with:
                  coverage: "none"
                  extensions: "intl, mbstring, pdo_sqlite, zip"
                  php-version: ${{ matrix.php-version }}
                  tools: composer:v2

            - name: "Add PHPUnit matcher"
              if: matrix.use-docker != 'true'
              run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

            - name: "Install dependencies"
              if: matrix.use-docker != 'true'
              run: composer install --ansi --no-interaction --no-progress

            - name: "Build and compile assets"
              if: matrix.use-docker != 'true'
              run: |
                php bin/console importmap:install
                php bin/console sass:build
                php bin/console asset-map:compile

            - name: "Build test environment for macOS"
              if: matrix.use-docker == 'true'
              run: |
                # Build the test Docker image
                docker compose -f docker-compose.test.yml build --no-cache

          - name: "Run tests (macOS Docker)"
              if: matrix.use-docker == 'true'
              run: |
                # Run tests in Docker container
                docker compose -f docker-compose.test.yml up --abort-on-container-exit --exit-code-from symfony-test

          - name: "Clean up Docker resources"
              if: matrix.use-docker == 'true' && always()
              run: |
                # Clean up Docker containers and volumes
                docker compose -f docker-compose.test.yml down -v --remove-orphans

            - name: "Run tests (other platforms)"
              if: matrix.use-docker != 'true'
              run: vendor/bin/phpunit
