name: "Tests"

on:
    pull_request:
    push:
        branches:
            - main
    workflow_dispatch:

env:
    fail-fast: true

permissions:
    contents: read

jobs:
    test:
        name: "${{ matrix.operating-system }} / PHP ${{ matrix.php-version }}"
        runs-on: ${{ matrix.operating-system }}
        continue-on-error: false

        strategy:
            matrix:
                operating-system: ['ubuntu-latest']
                php-version: ['8.2', '8.3', '8.4']
                include:
                    - operating-system: 'windows-latest'
                      php-version: '8.2'
                    - operating-system: 'macos-latest'
                      php-version: '8.3'

        steps:
            - name: "Checkout code"
              uses: actions/checkout@v5

            - name: "Install PHP with extensions"
              uses: shivammathur/setup-php@v2
              with:
                  coverage: "none"
                  extensions: "intl, mbstring, pdo_sqlite, zip"
                  php-version: ${{ matrix.php-version }}
                  tools: composer:v2

            - name: "Add PHPUnit matcher"
              run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

            - name: "Install dependencies"
              run: composer install --ansi --no-interaction --no-progress

            - name: "Configure macOS-specific settings"
              if: matrix.operating-system == 'macos-latest'
              run: |
                cp .env.test.macos .env.test.local
                mkdir -p var/test
                # Create a simpler PHPUnit config for macOS without DAMA extension
                cp phpunit.dist.xml phpunit.macos.xml
                sed -i '' '/DAMA.*PHPUnitExtension/d' phpunit.macos.xml

            - name: "Build and compile assets"
              run: |
                php bin/console importmap:install
                php bin/console sass:build
                php bin/console asset-map:compile

            - name: "Run tests"
              run: |
                if [ "${{ matrix.operating-system }}" = "macos-latest" ]; then
                  vendor/bin/phpunit --configuration phpunit.macos.xml
                else
                  vendor/bin/phpunit
                fi
