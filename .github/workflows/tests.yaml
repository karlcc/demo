name: "Tests"

on:
    pull_request:
    push:
        branches:
            - main
    workflow_dispatch:

env:
    fail-fast: false

permissions:
    contents: read

jobs:
    test:
        name: "${{ matrix.operating-system }} / PHP ${{ matrix.php-version }}"
        runs-on: ${{ matrix.operating-system }}
        continue-on-error: false

        strategy:
            matrix:
                operating-system: ['ubuntu-latest']
                php-version: ['8.2', '8.3', '8.4']
                include:
                    - operating-system: 'windows-latest'
                      php-version: '8.2'
                    - operating-system: 'macos-latest'
                      php-version: '8.2'

        steps:
            - name: "Checkout code"
              uses: actions/checkout@v5

            - name: "Install PHP with extensions (macOS)"
              if: matrix.operating-system == 'macos-latest'
              uses: shivammathur/setup-php@v2
              with:
                  coverage: "none"
                  extensions: "intl, mbstring, pdo_sqlite, zip"
                  php-version: ${{ matrix.php-version }}
                  tools: composer:v2
                  ini-values: memory_limit=1024M, opcache.enable=0, opcache.enable_cli=0, max_execution_time=0, zend.assertions=0, realpath_cache_size=0, realpath_cache_ttl=0, auto_globals_jit=0

            - name: "Install PHP with extensions (other platforms)"
              if: matrix.operating-system != 'macos-latest'
              uses: shivammathur/setup-php@v2
              with:
                  coverage: "none"
                  extensions: "intl, mbstring, pdo_sqlite, zip"
                  php-version: ${{ matrix.php-version }}
                  tools: composer:v2
                  ini-values: memory_limit=768M, opcache.enable=0, opcache.enable_cli=0, max_execution_time=0, zend.assertions=0

            - name: "Add PHPUnit matcher"
              run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

            - name: "Install dependencies"
              run: composer install --ansi --no-interaction --no-progress

            - name: "Build and compile assets"
              run: |
                php bin/console importmap:install
                php bin/console sass:build
                php bin/console asset-map:compile

            - name: "Configure macOS test environment"
              if: matrix.operating-system == 'macos-latest'
              run: |
                # Set very conservative environment for macOS
                export SYMFONY_DEPRECATIONS_HELPER=disabled
                export DAMA_DOCTRINE_TEST_BUNDLE_ENABLED=0
                export APP_ENV=test
                export DATABASE_URL="sqlite:///:memory:"

                # Clear any existing caches that might cause issues
                rm -rf var/cache/test/* || true
                rm -rf .phpunit.cache.macos || true

            - name: "Run tests (macOS)"
              if: matrix.operating-system == 'macos-latest'
              run: |
                # Try running all tests first
                set +e
                php -d memory_limit=1024M \
                    -d opcache.enable=0 \
                    -d opcache.enable_cli=0 \
                    -d realpath_cache_size=0 \
                    -d zend.assertions=0 \
                    vendor/bin/phpunit \
                    --configuration phpunit.macos.xml \
                    --stop-on-failure \
                    --no-coverage \
                    --process-isolation \
                    --verbose

                TEST_EXIT_CODE=$?

                if [ $TEST_EXIT_CODE -eq 139 ]; then
                  echo "Segfault detected, trying individual test directories..."

                  # If segfault, try running tests directory by directory
                  for dir in tests/*/; do
                    if [ -d "$dir" ]; then
                      echo "Running tests in $dir"
                      php -d memory_limit=1024M \
                          -d opcache.enable=0 \
                          -d opcache.enable_cli=0 \
                          -d realpath_cache_size=0 \
                          -d zend.assertions=0 \
                          vendor/bin/phpunit \
                          --configuration phpunit.macos.xml \
                          --no-coverage \
                          --process-isolation \
                          --verbose \
                          "$dir" || exit $?
                    fi
                  done

                  # Run individual test files in tests root
                  for file in tests/*.php; do
                    if [ -f "$file" ]; then
                      echo "Running test file $file"
                      php -d memory_limit=1024M \
                          -d opcache.enable=0 \
                          -d opcache.enable_cli=0 \
                          -d realpath_cache_size=0 \
                          -d zend.assertions=0 \
                          vendor/bin/phpunit \
                          --configuration phpunit.macos.xml \
                          --no-coverage \
                          --process-isolation \
                          --verbose \
                          "$file" || exit $?
                    fi
                  done

                  echo "All tests completed successfully via fallback method"
                else
                  exit $TEST_EXIT_CODE
                fi
              env:
                SYMFONY_DEPRECATIONS_HELPER: disabled
                DAMA_DOCTRINE_TEST_BUNDLE_ENABLED: 0
                DATABASE_URL: "sqlite:///:memory:"

            - name: "Run tests (other platforms)"
              if: matrix.operating-system != 'macos-latest'
              run: vendor/bin/phpunit --stop-on-failure --no-coverage
              env:
                SYMFONY_DEPRECATIONS_HELPER: disabled
                DAMA_DOCTRINE_TEST_BUNDLE_ENABLED: 1
