name: "Docker Multi-Architecture Tests"

on:
    pull_request:
    push:
        branches:
            - main
    workflow_dispatch:

env:
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository }}/symfony-demo

permissions:
    contents: read
    packages: write

jobs:
    test-amd64:
        name: "Test AMD64"
        runs-on: ubuntu-latest
        timeout-minutes: 15

        steps:
            - name: "Checkout code"
              uses: actions/checkout@v5

            - name: "Set up Docker Buildx"
              uses: docker/setup-buildx-action@v3

            - name: "Build AMD64 test image"
              uses: docker/build-push-action@v5
              with:
                context: .
                file: ./Dockerfile.test
                platforms: linux/amd64
                push: false
                load: true
                tags: symfony-demo-test:amd64
                cache-from: type=gha,scope=amd64
                cache-to: type=gha,mode=max,scope=amd64

            - name: "Run PHPUnit tests (AMD64)"
              run: |
                docker run --rm \
                  --platform linux/amd64 \
                  -v ${{ github.workspace }}:/var/www/html \
                  -w /var/www/html \
                  symfony-demo-test:amd64 \
                  ./bin/phpunit --stop-on-failure --no-coverage
              env:
                APP_ENV: test
                SYMFONY_DEPRECATIONS_HELPER: disabled
                DAMA_DOCTRINE_TEST_BUNDLE_ENABLED: 1

            - name: "Run PHPStan analysis (AMD64)"
              run: |
                docker run --rm \
                  --platform linux/amd64 \
                  -v ${{ github.workspace }}:/var/www/html \
                  -w /var/www/html \
                  symfony-demo-test:amd64 \
                  ./vendor/bin/phpstan analyse
              env:
                APP_ENV: test

    test-arm64:
        name: "Test ARM64"
        runs-on: ubuntu-latest
        timeout-minutes: 25
        continue-on-error: true

        steps:
            - name: "Checkout code"
              uses: actions/checkout@v5

            - name: "Set up Docker Buildx"
              uses: docker/setup-buildx-action@v3

            - name: "Set up QEMU"
              uses: docker/setup-qemu-action@v3
              with:
                platforms: arm64

            - name: "Build ARM64 test image"
              uses: docker/build-push-action@v5
              with:
                context: .
                file: ./Dockerfile.test
                platforms: linux/arm64
                push: false
                load: true
                tags: symfony-demo-test:arm64
                cache-from: type=gha,scope=arm64
                cache-to: type=gha,mode=max,scope=arm64

            - name: "Run PHPUnit tests (ARM64)"
              run: |
                docker run --rm \
                  --platform linux/arm64 \
                  -v ${{ github.workspace }}:/var/www/html \
                  -w /var/www/html \
                  symfony-demo-test:arm64 \
                  ./bin/phpunit --stop-on-failure --no-coverage
              env:
                APP_ENV: test
                SYMFONY_DEPRECATIONS_HELPER: disabled
                DAMA_DOCTRINE_TEST_BUNDLE_ENABLED: 1

    docker-compose-test:
        name: "Docker Compose Test"
        runs-on: ubuntu-latest
        timeout-minutes: 15

        steps:
            - name: "Checkout code"
              uses: actions/checkout@v5

            - name: "Set up Docker Buildx"
              uses: docker/setup-buildx-action@v3

            - name: "Build services with Docker Compose"
              run: |
                docker compose -f docker-compose.test.yml build

            - name: "Run tests via Docker Compose"
              run: |
                docker compose -f docker-compose.test.yml run --rm symfony-test
              env:
                APP_ENV: test
                SYMFONY_DEPRECATIONS_HELPER: disabled
                DAMA_DOCTRINE_TEST_BUNDLE_ENABLED: 1

            - name: "Run PHPStan via Docker Compose"
              run: |
                docker compose -f docker-compose.test.yml run --rm symfony-phpstan

            - name: "Run PHP CS Fixer via Docker Compose"
              run: |
                docker compose -f docker-compose.test.yml run --rm symfony-cs-fixer

            - name: "Cleanup"
              run: |
                docker compose -f docker-compose.test.yml down -v

    docker-bake-test:
        name: "Docker Bake Multi-Arch Test"
        runs-on: ubuntu-latest
        timeout-minutes: 25

        steps:
            - name: "Checkout code"
              uses: actions/checkout@v5

            - name: "Set up Docker Buildx"
              uses: docker/setup-buildx-action@v3

            - name: "Set up QEMU"
              uses: docker/setup-qemu-action@v3
              with:
                platforms: arm64

            - name: "Build multi-arch images with Docker Bake"
              uses: docker/bake-action@v5
              with:
                files: docker-bake.hcl
                targets: symfony-demo-test
                set: |
                  symfony-demo-test.cache-from=type=gha
                  symfony-demo-test.cache-to=type=gha,mode=max

            - name: "Test with multi-arch images"
              run: |
                # Test AMD64
                docker run --rm --platform linux/amd64 \
                  -v ${{ github.workspace }}:/var/www/html \
                  -w /var/www/html \
                  symfony-demo-test:latest \
                  ./bin/phpunit --stop-on-failure --no-coverage

                # Test ARM64 (if available)
                if docker manifest inspect symfony-demo-test:latest | grep -q "arm64"; then
                  echo "Testing ARM64 architecture..."
                  docker run --rm --platform linux/arm64 \
                    -v ${{ github.workspace }}:/var/www/html \
                    -w /var/www/html \
                    symfony-demo-test:latest \
                    ./bin/phpunit --stop-on-failure --no-coverage
                else
                  echo "ARM64 image not available, skipping ARM64 tests"
                fi
              env:
                APP_ENV: test
                SYMFONY_DEPRECATIONS_HELPER: disabled
                DAMA_DOCTRINE_TEST_BUNDLE_ENABLED: 1